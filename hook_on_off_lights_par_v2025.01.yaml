# Blueprint metadata
# TODOs:
# - if delayed turn off is enabled, double press turns on permanently (settable, helper)
blueprint:
  name: Advanced Hook for Lights with only On/Off Functionality - Primary as Reference - v2025.01
  description: |
    Hook automation which allows to control one or more on/off lights through a controller with optional delayed turn off functionality.
    
    The primary light entity is the reference for the secondary ones, that means all the secondary light entities will copy the properties of the primary entity.
    
    The blueprint can accept multiple devices and/or entities as controllers.
    
    **Inputs marked with * are mandatory.**
    
    I recommend using the same types of lights in one hook to avoid unexpected transition differences between the controlled lights.
    I you want to control different types of light with the same controller, create separate hooks for every variant.
    
    Automations created with this blueprint must be connected with one or more of my [zeolyth](https://github.com/zeolyth/home_assistant_blueprints/) or [Awesome HA Blueprints'](https://epmatt.github.io/awesome-ha-blueprints/docs/blueprints/controllers) controllers.
    Controllers are blueprints which allow to easily integrate a wide range of controllers (wall switches, remotes, dimmers, etc.) and use them to run a set of actions when interacting with them.
    
    This blueprint uses regions and therefore is only compatible with HA version 2024.6 and newer.
    
    The script is based on the [Awesome HA Blueprints](https://epmatt.github.io/awesome-ha-blueprints) project.
    
    Version: 2025.01-2025.02.23
  source_url: https://github.com/zeolyth/home_assistant_blueprints/blob/main/hook_on_off_lights_par_v2025.01.yaml
  domain: automation
  homeassistant:
    min_version: 2024.6.0
  input:
    base:
      name: Controllers and Lights
      input:
        controller_device:
          name: Controller Devices*
          description: |
            One or more controller devices which will control the Light. These values should match the one specified in the corresponding Controller automations.
            You must select at least one device or entity (not validatated, if you leave both inputs empty, simply the hook will do nothing).
            
            If you use Awesome HA Blueprints, select only controllers of the same model and use the Controller model selector to specify the correct model, otherwise it can happen that some buttons will operate undesirable!
          default: []
          selector:
            device:
              multiple: true
              entity:
                domain: sensor
        controller_entity:
          name: Controller Entities*
          description: |
            One or more controller entities which will control the Light. These values should match the one specified in the corresponding Controller automations.
            You must select at least one device or entity (not validatated, if you leave both inputs empty, simply the hook will do nothing).
            
            If you use Awesome HA Blueprints, select only controllers of the same model and use the Controller model selector to specify the correct model, otherwise it can happen that some buttons will operate undesirable!
          default: []
          selector:
            entity:
              multiple: true
              domain:
                - binary_sensor
                - sensor
        controller_model:
          name: Controller model
          description: |-
            The model for the controller used in this automation.
            If you use my [zeolyth](https://github.com/zeolyth/home_assistant_blueprints/) controllers, you can leave it on Auto, otherwise you have to choose a value from the list of supported controllers.
          default: Auto
          selector:
            select:
              options:
                - Auto
                - IKEA E1524/E1810 TRÅDFRI Wireless 5-Button Remote
                - IKEA E1743 TRÅDFRI On/Off Switch & Dimmer
                - IKEA E1743 TRÅDFRI On/Off Switch & Dimmer (#2)
                - IKEA E1744 SYMFONISK Rotary Remote
                - IKEA E1766 TRÅDFRI Open/Close Remote
                - IKEA E1766 TRÅDFRI Open/Close Remote (#2)
                - IKEA E1812 TRÅDFRI Shortcut button
                - IKEA E2001/E2002 STYRBAR Remote control
                - IKEA E2001/E2002 STYRBAR Remote control (#2)
                - IKEA ICTC-G-1 TRÅDFRI wireless dimmer
                - OSRAM AC025XX00NJ SMART+ Switch Mini
                - Philips 324131092621 Hue Dimmer switch
                - Philips 8718699693985 Hue Smart Button
                - Philips 929002398602 Hue Dimmer switch v2
                - SONOFF SNZB-01 Wireless Switch
                - Xiaomi WXCJKG11LM Aqara Opple 2 button remote
                - Xiaomi WXCJKG12LM Aqara Opple 4 button remote
                - Xiaomi WXCJKG12LM Aqara Opple 4 button remote (#2)
                - Xiaomi WXCJKG13LM Aqara Opple 6 button remote
                - Xiaomi WXCJKG13LM Aqara Opple 6 button remote (#2)
                - Xiaomi WXCJKG13LM Aqara Opple 6 button remote (#3)
                - Xiaomi WXKG11LM Aqara Wireless Switch Mini
        input_light_ref:
          name: Primary light*
          description: |-
            Primary light, which will be controlled through this automation.
            If slave lights are also given, this item will be the reference for the starting values of the transitions.
          selector:
            entity:
              filter:
                - domain: light
        input_lights_slave:
          name: Slave lights
          description: |-
            Slave light(s) which will be controlled through this automation.
            These lights will always copy the transitions of the primary light item.
            
            Do not use different models! If the reference bulb has other brightness levels, color mode or color temperature levels as the slaves, the transitions can end up in unpredictable behavior for the incompatible bulbs.
          default: []
          selector:
            entity:
              multiple: true
              filter:
                - domain: light
        event_id:
          name: Event identifier
          description: |-
            An event identifier to separate the fired event from the defult events (ahb_controller_event).
            Give it a unique name if you want to use the delayed turn off function by the lights or if you experience problems by concurrent controller actions. You have to use the same unique name by the related controllers.
            
            Valid characters: lowercase letters, numbers, and underscores (not validatated, usage of invalid characters can end up in crashing the automatization).
            
            Use it in both the controller and the hook automation that you want to seaparate. Controllers and hooks with the same event ID will cooperate with each other.
            
            Only compatible with zeolyth controllers and hooks!
          default: ahb_controller_event
    # delayed turn off settings
    delayed_turn_off:
      name: Delayed turn off
      collapsed: true
      input:
        delayed_turn_off_enable:
          name: Enable delayed turn off
          description: |-
            Enable delayed turn off of the lights.
            For this function to work correctly you have to give a unique name for the event identifier both on the this light hook and the related controller automations.
            
            If enabled, the functions turn on on brightness or color change will be disabled.
          default: false
          selector:
            boolean:
        delayed_turn_off_interval:
          name: Delay before turning off the lights in seconds
          default: 100
          selector:
            number:
              unit_of_measurement: seconds
              mode: box
        delayed_turn_off_include_motion:
          name: Enable delayed turn off for motion sensors too
          description: When a motion sensor turns on the light, it will turn off regardless of whether the motion sensor is still active.
          default: false
          selector:
            boolean:
# Automation schema
variables:
  # convert blueprint inputs into variables to be used in templates
  controller_device: !input controller_device
  controller_entity: !input controller_entity
  input_controller_model: !input controller_model
  input_light_ref: !input input_light_ref
  input_lights_slave: !input input_lights_slave
  input_light: '{{ [input_light_ref] + input_lights_slave }}'
  # supported controllers and mappings
  controller_mapping:
    Binary Sensor:
      turn_on: state_on
      turn_off: state_off
    IKEA E1524/E1810 TRÅDFRI Wireless 5-Button Remote:
      brightness_up: button_up_short
      brightness_up_repeat: button_up_long
      brightness_down: button_down_short
      brightness_down_repeat: button_down_long
      color_down: button_left_short
      color_down_repeat: button_left_long
      color_up: button_right_short
      color_up_repeat: button_right_long
      toggle: button_center_short
    IKEA E1743 TRÅDFRI On/Off Switch & Dimmer:
      turn_on: button_up_short
      brightness_up_repeat: button_up_long
      color_up: button_up_double
      turn_off: button_down_short
      brightness_down_repeat: button_down_long
      color_down: button_down_double
    IKEA E1743 TRÅDFRI On/Off Switch & Dimmer (#2):
      brightness_up: button_up_short
      brightness_up_repeat: button_up_long
      turn_on: button_up_double
      brightness_down: button_down_short
      brightness_down_repeat: button_down_long
      turn_off: button_down_double
    IKEA E1744 SYMFONISK Rotary Remote:
      brightness_down_repeat: rotate_left
      brightness_up_repeat: rotate_right
      toggle: click_short
      color_up: click_double
      color_down: click_triple
    IKEA E1766 TRÅDFRI Open/Close Remote:
      brightness_up: button_up_short
      turn_on: button_up_double
      brightness_down: button_down_short
      turn_off: button_down_double
    IKEA E1766 TRÅDFRI Open/Close Remote (#2):
      brightness_up: button_up_short
      color_up: button_up_double
      brightness_down: button_down_short
      color_down: button_down_double
    IKEA E1812 TRÅDFRI Shortcut button:
      toggle: button_short
      color_up: button_double
    IKEA E2001/E2002 STYRBAR Remote control:
      turn_on: button_up_short
      brightness_up_repeat: button_up_long
      turn_off: button_down_short
      brightness_down_repeat: button_down_long
      color_down: button_left_short
      color_down_repeat: button_left_long
      color_up: button_right_short
      color_up_repeat: button_right_long
    IKEA E2001/E2002 STYRBAR Remote control (#2):
      brightness_up: button_up_short
      brightness_up_repeat: button_up_long
      turn_on: button_up_double
      brightness_down: button_down_short
      brightness_down_repeat: button_down_long
      turn_off: button_down_double
      color_down: button_left_short
      color_down_repeat: button_left_long
      color_up: button_right_short
      color_up_repeat: button_right_long
    IKEA ICTC-G-1 TRÅDFRI wireless dimmer:
      brightness_down_repeat: rotate_left
      brightness_up_repeat: rotate_right
    OSRAM AC025XX00NJ SMART+ Switch Mini:
      brightness_up: button_up_short
      brightness_up_repeat: button_up_long
      color_up: button_up_double
      brightness_down: button_down_short
      brightness_down_repeat: button_down_long
      color_down: button_down_double
      toggle: button_center_short
    Philips 324131092621 Hue Dimmer switch:
      turn_on: button_on_short
      color_up_repeat: button_on_long
      turn_off: button_off_short
      color_down_repeat: button_off_long
      brightness_up: button_up_short
      brightness_up_repeat: button_up_long
      brightness_down: button_down_short
      brightness_down_repeat: button_down_long
    Philips 8718699693985 Hue Smart Button:
      toggle: button_short
    Philips 929002398602 Hue Dimmer switch v2:
      turn_on: button_on_short
      color_up_repeat: button_on_long
      turn_off: button_off_short
      color_down_repeat: button_off_long
      brightness_up: button_up_short
      brightness_up_repeat: button_up_long
      brightness_down: button_down_short
      brightness_down_repeat: button_down_long
    SONOFF SNZB-01 Wireless Switch:
      toggle: button_short
      color_up: button_double
    Xiaomi WXCJKG11LM Aqara Opple 2 button remote:
      turn_on: button_1_short
      brightness_up_repeat: button_1_long
      color_up: button_1_double
      turn_off: button_2_short
      brightness_down_repeat: button_2_long
      color_down: button_2_double
    Xiaomi WXCJKG12LM Aqara Opple 4 button remote:
      turn_on: button_1_short
      brightness_up_repeat: button_1_long
      color_up: button_1_double
      turn_off: button_2_short
      brightness_down_repeat: button_2_long
      color_down: button_2_double
    Xiaomi WXCJKG12LM Aqara Opple 4 button remote (#2):
      turn_on: button_3_short
      brightness_up_repeat: button_3_long
      color_up: button_3_double
      turn_off: button_4_short
      brightness_down_repeat: button_4_long
      color_down: button_4_double
    Xiaomi WXCJKG13LM Aqara Opple 6 button remote:
      turn_on: button_1_short
      brightness_up_repeat: button_1_long
      color_up: button_1_double
      turn_off: button_2_short
      brightness_down_repeat: button_2_long
      color_down: button_2_double
    Xiaomi WXCJKG13LM Aqara Opple 6 button remote (#2):
      turn_on: button_3_short
      brightness_up_repeat: button_3_long
      color_up: button_3_double
      turn_off: button_4_short
      brightness_down_repeat: button_4_long
      color_down: button_4_double
    Xiaomi WXCJKG13LM Aqara Opple 6 button remote (#3):
      turn_on: button_5_short
      brightness_up_repeat: button_5_long
      color_up: button_5_double
      turn_off: button_6_short
      brightness_down_repeat: button_6_long
      color_down: button_6_double
    Xiaomi WXKG11LM Aqara Wireless Switch Mini:
      toggle: button_short
      color_up: button_double
  delayed_turn_off_enable: !input delayed_turn_off_enable
  delayed_turn_off_interval: !input delayed_turn_off_interval
  delayed_turn_off_include_motion: !input delayed_turn_off_include_motion
  controller_model_motion_sensor: Motion Sensor
mode: restart
max_exceeded: silent
trigger:
  - trigger: event
    event_type: !input event_id
condition:
  - condition: template
    value_template: '{{ "controller" in trigger.event.data and (trigger.event.data.controller in controller_device or trigger.event.data.controller in controller_entity) }}'
  - condition: template
    value_template: '{{ input_controller_model != "Auto" or ("model" in trigger.event.data and trigger.event.data.model in controller_mapping) }}'
action:
  - variables:
      controller_model: >-
        {%- if input_controller_model == "Auto" -%}
          {{ trigger.event.data.model }}
        {%- else -%}
          {{ input_controller_model }}
        {%- endif -%}
      # choose actions for buttons based on controller
      toggle: '{{ controller_mapping[controller_model]["toggle"] | default(None) }}'
      turn_on: '{{ controller_mapping[controller_model]["turn_on"] | default(None) }}'
      turn_off: '{{ controller_mapping[controller_model]["turn_off"] | default(None) }}'
      trigger_action: >-
        {%- set ta = trigger.event.data.action -%}
        {%- if ta == toggle -%}
          {%- if states(input_light_ref) | lower == "on" -%}
            turn_off
          {%- else -%}
            turn_on
          {%- endif -%}
        {%- else -%}
          {{ ta }}
        {%- endif -%}
  - choose:
      # TURN ON
      - conditions:
          - condition: template
            value_template: '{{ trigger_action == "turn_on" or trigger_action == turn_on }}'
        sequence:
          - service: light.turn_on
            data:
              entity_id: '{{ input_light }}'
      # TURN OFF
      - conditions:
          - condition: template
            value_template: '{{ trigger_action == "turn_off" or trigger_action == turn_off }}'
        sequence:
          - service: light.turn_off
            data:
              entity_id: '{{ input_light }}'
  # DELAYED TURN OFF
  - if:
      - condition: template
        value_template: '{{ delayed_turn_off_enable and (trigger_action == "turn_on" or trigger_action == turn_on) }}'
      - condition: template
        value_template: '{{ controller_model != controller_model_motion_sensor or delayed_turn_off_include_motion }}'
    then:
      - delay:
          milliseconds: '{{ delayed_turn_off_interval * 1000 - light_transition_short }}'
      - service: light.turn_off
        data:
          entity_id: '{{ input_light }}'
          transition: '{{ light_transition_short / 1000 }}'
